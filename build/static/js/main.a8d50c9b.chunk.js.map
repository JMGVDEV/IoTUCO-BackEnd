{"version":3,"sources":["Utils/Api.js","pages/LoginPage.jsx","components/NavBarDark.jsx","components/Filters.jsx","components/Graphs.jsx","pages/HomePage.jsx","pages/ConfigActions.jsx","components/DiseaseForm.jsx","pages/Diseases.jsx","components/UserCard.jsx","components/CreateUserForm.jsx","pages/Users.jsx","components/App.js","index.js"],"names":["SERVER_URL","loginUser","email","password","a","urlencoded","URLSearchParams","append","console","log","requestOptions","method","body","redirect","fetch","res","ok","Error","json","localStorage","setItem","jwt","role","getAllUsers","myHeaders","Headers","getItem","headers","response","users","createUser","user","updateUser","id","deleteUser","getGrowBedEnvironment","growbed_id","environment","getGreenHouses","green_houses","getGrowBeds","grow_beds","LoginPage","props","onChangeEmail","event","setState","target","value","onChangePassword","login","state","error","errorMessage","Alert","className","variant","to","pathname","name","this","Container","Row","Col","icon","faUser","classame","color","Form","Group","controlId","Label","Control","onChange","type","placeholder","Button","onClick","React","Component","NavBarDark","logout","clear","isAdmin","Navbar","bg","Brand","faSeedling","Nav","Link","href","Filters","componentDidMount","getGrowBedsAndGreenHouses","Promise","all","values","allGrowBeds","greenHouseId","greenhouse","growBeds","filter","growBed","greenHouses","handleFiltersChange","growBedId","growbed","filterGrowBeds","e","handleGrowBedChange","faThermometerQuarter","onSubmit","as","required","map","green_house","idx","key","grow_bed","Graphs","getEnvironmentData","interval","setInterval","componentDidUpdate","prevProps","prevState","clearInterval","temperature","humidity","animDelay","nrOfLevels","textColor","percent","formatTextValue","HomePage","handleIntervalChange","filters","defaultValue","max","min","ConfigActions","DisComp","onChangeDisease","checked","checkedDiseases","push","pop","onChangeObservation","Observations","preventDefault","diseases","Fragment","disease","Check","label","rows","Diseases","UserCard","setLoading","refreshUsers","showNotification","editing","setUser","find","user_selected","last_name","selected","disabled","CreateUserForm","password_v","Users","componentWillMount","api","selected_user","loading","title","message","NotificationManager","success","Spinner","animation","AuthenticatedRoute","component","rest","render","from","location","App","exact","path","container","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.a8d50c9b.chunk.js","sourcesContent":["/*\r\n * URL SERVER\r\n */\r\n\r\nconst SERVER_URL = 'http://3.22.57.173:3000';\r\n\r\n/*\r\n * SERVER PATHS\r\n */\r\nconst LOGIN_URL = '/api/login';\r\nconst USERS_URL = '/api/users';\r\nconst GROWBEDS_URL = '/api/grow_beds';\r\nconst GREEN_HOUSES_URL = '/api/grow_houses';\r\n\r\n/*----------------------------------------------------------\r\n* \r\n*                     API REQUESTS\r\n*\r\n ----------------------------------------------------------*/\r\n\r\n/*-----------------------------------------------------------\r\n *                      Users requests\r\n *----------------------------------------------------------*/\r\n\r\nexport const loginUser = async (email, password) => {\r\n  var urlencoded = new URLSearchParams();\r\n  urlencoded.append('email', email);\r\n  urlencoded.append('password', password);\r\n\r\n  console.log('start');\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let res = await fetch(SERVER_URL + LOGIN_URL, requestOptions);\r\n  if (!res.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await res.json();\r\n  localStorage.setItem('token', json.jwt);\r\n  localStorage.setItem('role', json.role);\r\n\r\n  return;\r\n};\r\n\r\nexport const getAllUsers = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + USERS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.users;\r\n};\r\n\r\nexport const createUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams(user);\r\n\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + USERS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json;\r\n};\r\n\r\nexport const updateUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams(user);\r\n\r\n  var requestOptions = {\r\n    method: 'PUT',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + USERS_URL + `/${user.id}`,\r\n    requestOptions\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json;\r\n};\r\n\r\nexport const deleteUser = async (user) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var urlencoded = new URLSearchParams();\r\n\r\n  var requestOptions = {\r\n    method: 'DELETE',\r\n    headers: myHeaders,\r\n    body: urlencoded,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(\r\n    SERVER_URL + USERS_URL + `/${user.id}`,\r\n    requestOptions\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  return response.json;\r\n};\r\n\r\n/*-----------------------------------------------------------\r\n *        Environment requests\r\n *---------------------------------------------------------*/\r\n\r\nexport const getGrowBedEnvironment = async (growbed_id) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n  let response = await fetch(\r\n    SERVER_URL + GROWBEDS_URL + `/${growbed_id}`,\r\n    requestOptions\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.environment;\r\n};\r\n\r\nexport const getGreenHouses = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + GREEN_HOUSES_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.green_houses;\r\n};\r\n\r\nexport const getGrowBeds = async () => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append('token', localStorage.getItem('token'));\r\n\r\n  var requestOptions = {\r\n    method: 'GET',\r\n    headers: myHeaders,\r\n    redirect: 'follow',\r\n  };\r\n\r\n  let response = await fetch(SERVER_URL + GROWBEDS_URL, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error();\r\n  }\r\n\r\n  let json = await response.json();\r\n  return json.grow_beds;\r\n};\r\n","import React from 'react';\r\nimport { Form, Button, Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { loginUser as login } from '../Utils/Api';\r\nimport '../styles/login.css';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      error: false,\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  onChangeEmail = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onChangePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  loginUser = async () => {\r\n    try {\r\n      await login(this.state.email, this.state.password);\r\n      this.setState({ error: false, login: true });\r\n    } catch (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const errorMessage = (\r\n      <Alert className=\"alert\" variant=\"danger\">\r\n        Usuario o contraseña inválidos\r\n      </Alert>\r\n    );\r\n\r\n    const redirect = (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/home',\r\n          state: { name: this.state.name },\r\n        }}\r\n      />\r\n    );\r\n\r\n    if (this.state.login) {\r\n      return redirect;\r\n    }\r\n\r\n    return (\r\n      <div className=\"layout\">\r\n        <div className=\"navBar\">\r\n          <h3>Sistema de monitoreo de invernaderos</h3>\r\n        </div>\r\n\r\n        <Container className=\"layout\">\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <Col className=\"col-sm-4\">\r\n              <div className=\"d-flex justify-content-center icon\">\r\n                <FontAwesomeIcon icon={faUser} classame=\"usr\" color=\"#4D4D4D\" />\r\n              </div>\r\n\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Correo electrónico</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChangeEmail}\r\n                    value={this.state.email}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Contraseña</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChangePassword}\r\n                    value={this.state.password}\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={this.loginUser}\r\n                  className=\"btn-block\"\r\n                >\r\n                  Entrar\r\n                </Button>\r\n              </Form>\r\n              {this.state.error ? errorMessage : null}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/navBar.css';\r\n\r\nexport default class NavBarDark extends Component {\r\n  logout = () => {\r\n    localStorage.clear();\r\n  };\r\n\r\n  isAdmin = () => {\r\n    let role = localStorage.getItem('role');\r\n    return role == 'admin' ? true : false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>\r\n          <FontAwesomeIcon className=\"seedling\" icon={faSeedling} />\r\n          Sistema de monitoreo\r\n        </Navbar.Brand>\r\n\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/home\">Inicio</Nav.Link>\r\n          {this.isAdmin() && <Nav.Link href=\"/users\">Usuarios</Nav.Link>}\r\n          {this.isAdmin() && <Nav.Link href=\"/diseases\">Plagas</Nav.Link>}\r\n          {this.isAdmin() && (\r\n            <Nav.Link href=\"/configactions\">Acciones</Nav.Link>\r\n          )}\r\n\r\n          <Nav.Link href=\"/\">\r\n            <span onClick={this.logout}> Salir </span>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThermometerQuarter } from '@fortawesome/free-solid-svg-icons';\r\nimport { getGrowBeds, getGreenHouses } from '../Utils/Api';\r\n\r\nexport default class Filters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      growBeds: null,\r\n      greenHouses: null,\r\n      greenHouseId: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getGrowBedsAndGreenHouses();\r\n  };\r\n\r\n  getGrowBedsAndGreenHouses = async () => {\r\n    let values;\r\n\r\n    try {\r\n      values = await Promise.all([getGrowBeds(), getGreenHouses()]);\r\n    } catch (error) {\r\n      return;\r\n    }\r\n\r\n    this.allGrowBeds = values[0];\r\n\r\n    let greenHouseId = values[1][0].greenhouse;\r\n    let growBeds = this.allGrowBeds.filter(\r\n      (growBed) => growBed.greenhouse == greenHouseId\r\n    );\r\n\r\n    this.setState({ greenHouses: values[1], growBeds, greenHouseId });\r\n\r\n    this.props.handleFiltersChange({\r\n      growBedId: growBeds[0].growbed,\r\n      greenHouseId: greenHouseId,\r\n    });\r\n  };\r\n\r\n  filterGrowBeds = (e) => {\r\n    let greenHouseId = e.target.value;\r\n\r\n    let growBeds = this.allGrowBeds.filter(\r\n      (growBed) => growBed.greenhouse == greenHouseId\r\n    );\r\n\r\n    this.setState({ growBeds, greenHouseId });\r\n\r\n    this.props.handleFiltersChange({\r\n      growBedId: growBeds[0].growbed,\r\n      greenHouseId: greenHouseId,\r\n    });\r\n  };\r\n\r\n  handleGrowBedChange = (e) => {\r\n    let growBedId = e.target.value;\r\n    this.props.handleFiltersChange({\r\n      growBedId,\r\n      greenHouseId: this.state.greenHouseId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Seleccione una cama</h3>\r\n        <div className=\"icon text-center p-0 m-0\">\r\n          <FontAwesomeIcon icon={faThermometerQuarter} color=\"#4D4D4D\" />\r\n        </div>\r\n\r\n        <Form onSubmit={this.createUser}>\r\n          <Form.Group>\r\n            <Form.Label>Invernadero</Form.Label>\r\n            <Form.Control\r\n              onChange={this.filterGrowBeds}\r\n              as=\"select\"\r\n              required={true}\r\n            >\r\n              {this.state.greenHouses &&\r\n                this.state.greenHouses.map((green_house, idx) => (\r\n                  <option key={idx} value={green_house.greenhouse}>\r\n                    Invernadero {green_house.greenhouse}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Cama</Form.Label>\r\n            <Form.Control\r\n              onChange={this.handleGrowBedChange}\r\n              as=\"select\"\r\n              required={true}\r\n            >\r\n              {this.state.growBeds &&\r\n                this.state.growBeds.map((grow_bed, idx) => (\r\n                  <option key={idx} value={grow_bed.growbed}>\r\n                    Cama {grow_bed.growbed}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport GaugeChart from 'react-gauge-chart';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { getGrowBedEnvironment } from '../Utils/Api';\r\nimport '../styles/graphs.css';\r\n\r\nexport default class Graphs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.interval = null;\r\n    this.state = {\r\n      temperature: null,\r\n      humidity: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getEnvironmentData();\r\n    this.interval = setInterval(\r\n      this.getEnvironmentData,\r\n      this.props.interval * 1000\r\n    );\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.props.interval == prevProps.interval) {\r\n      return;\r\n    }\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(\r\n      this.getEnvironmentData,\r\n      this.props.interval * 1000\r\n    );\r\n  };\r\n\r\n  getEnvironmentData = async () => {\r\n    if (!this.props.growBedId) {\r\n      return;\r\n    }\r\n    try {\r\n      let environment = await getGrowBedEnvironment(this.props.growBedId);\r\n      this.setState({\r\n        temperature: environment.temperature / 100,\r\n        humidity: environment.humidity / 100,\r\n      });\r\n    } catch (error) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-4 text-center\">\r\n        <h2>Variables ambientales</h2>\r\n\r\n        <Row className=\" pt-5 justify-content-center\">\r\n          <Col>\r\n            <GaugeChart\r\n              animDelay={5}\r\n              nrOfLevels={20}\r\n              textColor=\"#777777\"\r\n              id=\"gauge-chart1\"\r\n              className=\"gauge\"\r\n              percent={this.state.temperature}\r\n              formatTextValue={(value) => value + '°'}\r\n            />\r\n            <h3>Temperatura</h3>\r\n          </Col>\r\n\r\n          <Col>\r\n            <GaugeChart\r\n              animDelay={5}\r\n              nrOfLevels={20}\r\n              percent={this.state.humidity}\r\n              textColor=\"#777777\"\r\n              id=\"gauge-chart2\"\r\n              formatTextValue={(value) => value + '%'}\r\n            />\r\n            <h3>Humedad </h3>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport Filters from '../components/Filters';\r\nimport Graphs from '../components/Graphs';\r\nimport '../styles/home.css';\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n      interval: 3,\r\n    };\r\n  }\r\n\r\n  handleIntervalChange = (e) => {\r\n    this.setState({ interval: e.target.value });\r\n  };\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-4 w-100 shadow-lg filters\">\r\n            <Filters handleFiltersChange={this.handleFiltersChange} />\r\n            <Form.Group>\r\n              <Form.Label>Refrescar cada (segundos)</Form.Label>\r\n              <Form.Control\r\n                defaultValue=\"3\"\r\n                type=\"number\"\r\n                max=\"30\"\r\n                min=\"1\"\r\n                onChange={this.handleIntervalChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col className=\"col-md-8\">\r\n            <Graphs\r\n              interval={this.state.interval}\r\n              growBedId={this.state.growBedId}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n\r\n/**\r\n \r\n\r\n\r\n */\r\n","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport NavBarDark from '../components/NavBarDark';\r\n\r\nclass ConfigActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-4 w-100 shadow-lg pt-3 mt-4 text-center justify-content-center\">\r\n            AQUI VAN LOS FILTROS DE LA CAMA O el invernadero\r\n          </Col>\r\n          <Col className=\"col-md-8\">AQUI SE CONFUGURAN LAS ACCIONES</Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ConfigActions;\r\n\r\n/*\r\n<div className=\"container\">\r\n<Box my={1} alignItems=\"center\" justifyContent=\"center\">\r\n  <Typography\r\n    align=\"center\"\r\n    variant=\"h2\"\r\n    style={{ color: 'gray' }}\r\n    gutterBottom\r\n  >\r\n    Configure Actions\r\n  </Typography>\r\n</Box>\r\n<Grid container justify=\"center\">\r\n  <Box\r\n    my={2}\r\n    className=\"avatar\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"center\"\r\n  >\r\n    <SettingsApplicationsOutlinedIcon style={{ fontSize: 80 }} />\r\n  </Box>\r\n</Grid>\r\n<Grid container justify=\"center\">\r\n  <DropdownButton\r\n    id=\"dropdown-basic-button\"\r\n    title=\"CAMAS\"\r\n    onChange={this.selectOption}\r\n  >\r\n    {this.state.growBed &&\r\n      this.state.growBed.map((growbed) => (\r\n        <DropdownItem\r\n          onClick={(e) => {\r\n            this.getIdBed(e, growbed);\r\n          }}\r\n          key={growbed.grow_bed}\r\n        >\r\n          CAMA {growbed.growbed}\r\n        </DropdownItem>\r\n      ))}\r\n  </DropdownButton>\r\n</Grid>\r\n<div style={{ padding: 50 }}>\r\n  <Grid container justify=\"space-around\">\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardTimePicker\r\n        margin=\"normal\"\r\n        id=\"start-time-picker\"\r\n        label=\"Start Time\"\r\n        value={this.state.selectedDate}\r\n        onChange={this.startTime}\r\n        KeyboardButtonProps={{\r\n          'aria-label': 'change time',\r\n        }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardTimePicker\r\n        margin=\"normal\"\r\n        id=\"final-time-picker\"\r\n        label=\"Final Time\"\r\n        value={this.state.selectedDate}\r\n        onChange={this.finalTime}\r\n        KeyboardButtonProps={{\r\n          'aria-label': 'change time',\r\n        }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  </Grid>\r\n</div>\r\n<div style={{ padding: 30 }}>\r\n  <Grid container justify=\"center\">\r\n    <Button\r\n      onClick={this.hourConfig}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className=\"configure\"\r\n    >\r\n      CONFIGURAR\r\n    </Button>\r\n  </Grid>\r\n</div>\r\n\r\n<Grid container justify=\"center\">\r\n  <div className=\"btn-group\">\r\n    <DropdownButton\r\n      id=\"dropdown-basic-button\"\r\n      title=\"INVERNADEROS\"\r\n      onChange={this.selectOption}\r\n    >\r\n      {this.state.greenHouse &&\r\n        this.state.greenHouse.map((greenhouse) => (\r\n          <DropdownItem\r\n            onClick={(e) => {\r\n              this.getIdHouse(e, greenhouse);\r\n            }}\r\n            key={greenhouse.green_house}\r\n          >\r\n            INVERNADERO {greenhouse.greenhouse}\r\n          </DropdownItem>\r\n        ))}\r\n    </DropdownButton>\r\n    <Button></Button>\r\n    <Button\r\n      onClick={this.openBlinds}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className=\"config\"\r\n    >\r\n      ABRIR CORTINAS\r\n    </Button>{' '}\r\n  </div>\r\n</Grid>\r\n<Grid container spacing={1}></Grid>\r\n</div>*/\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\n\r\nexport default class DisComp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkedDiseases = [];\r\n    this.Observations = '';\r\n    this.state = {\r\n      diseases: [\r\n        'Cenicillas',\r\n        'Manchas',\r\n        'Roya',\r\n        'Pudriciones',\r\n        'Cenicillas',\r\n        'Manchas',\r\n        'Roya',\r\n        'Pudriciones',\r\n        'Cenicillas',\r\n        'Manchas',\r\n        'Roya',\r\n        'Pudriciones',\r\n      ],\r\n    };\r\n  }\r\n\r\n  // React Checkboxes onChange Methods\r\n  onChangeDisease = (e) => {\r\n    if (e.target.checked) {\r\n      this.checkedDiseases.push(e.target.value);\r\n    } else {\r\n      this.checkedDiseases.pop(e.target.value);\r\n    }\r\n  };\r\n\r\n  onChangeObservation = (e) => {\r\n    this.Observations = e.target.value;\r\n  };\r\n\r\n  // Submit\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.checkedDiseases, this.Observations);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h5>Seleccione la(s) enfermedad(es):</h5>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <Row className=\"mb-4\">\r\n            {this.state.diseases.map((disease, idx) => (\r\n              <Col className=\"col-lg-2\" key={idx}>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    value={disease}\r\n                    label={disease}\r\n                    onChange={this.onChangeDisease}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n\r\n          <Form.Group controlId=\"Observaciones\">\r\n            <Form.Label>\r\n              <h5>Ingrese observaciones:</h5>\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"5\"\r\n              onChange={this.onChangeObservation}\r\n            />\r\n          </Form.Group>\r\n\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              variant=\"primary\"\r\n              className=\"btn-block w-50 \"\r\n            >\r\n              Guardar\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Filters from '../components/Filters';\r\nimport DisComp from '../components/DiseaseForm';\r\n\r\nexport default class Diseases extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkedDiseases = [];\r\n    // Checkbox Initial State\r\n    this.state = {\r\n      growBedId: null,\r\n      greenHouseId: null,\r\n    };\r\n  }\r\n\r\n  handleFiltersChange = (filters) => {\r\n    this.setState({\r\n      growBedId: filters.growBedId,\r\n      greenHouseId: filters.greenHouseId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <NavBarDark />\r\n\r\n        <Row className=\"content\">\r\n          <Col className=\"col-md-4 w-100 shadow-lg pt-3 mt-4 text-center justify-content-center\">\r\n            <Filters handleFiltersChange={this.handleFiltersChange} />\r\n          </Col>\r\n          <Col className=\"col-md-8 px-5\">\r\n            <div>\r\n              <div className=\"pt-3 text-center\">\r\n                <h2> Cama #{this.state.growBedId}</h2>\r\n              </div>\r\n            </div>\r\n            <DisComp />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { updateUser, deleteUser } from '../Utils/Api';\r\n\r\nexport default class UserCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: {},\r\n      editing: false,\r\n      user_selected: false,\r\n    };\r\n  }\r\n\r\n  updateUser = async () => {\r\n    let user = this.state.user;\r\n\r\n    try {\r\n      this.props.setLoading(true);\r\n      await updateUser(user);\r\n      await this.props.refreshUsers();\r\n\r\n      this.props.showNotification('success', 'Ok', 'Usuario actualizado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al actualizar el usuario'\r\n      );\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  deleteUser = async () => {\r\n    let user = this.state.user;\r\n\r\n    try {\r\n      this.props.setLoading(true);\r\n      await deleteUser(user);\r\n      await this.props.refreshUsers();\r\n      this.setState({ user: this.props.users[0] });\r\n\r\n      this.props.showNotification('success', 'Ok', 'Usuario eliminado');\r\n      this.props.setLoading(false);\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al eliminar el usuario'\r\n      );\r\n      this.props.setLoading(false);\r\n    }\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  setUser = (event) => {\r\n    if (!event.target.value) {\r\n      this.setState({ user: { name: '', last_name: '', email: '' } });\r\n      return;\r\n    }\r\n\r\n    let user = this.props.users.find((user) => user.name == event.target.value);\r\n    this.setState({ user, user_selected: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h3>Seleccione un usuario</h3>\r\n\r\n        <Form>\r\n          <Form.Group placeholder=\"Seleccione\">\r\n            <Form.Control onChange={this.setUser} as=\"select\">\r\n              <option value=\"\" defaultValue selected disabled>\r\n                Seleccione\r\n              </option>\r\n              {this.props.users.map((user) => {\r\n                return (\r\n                  <option value={user.name} key={user.id}>\r\n                    {`${user.name} ${user.last_name || ''}`}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <div className=\"text-center pb-3 shadow-lg\">\r\n          <Row className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"icon p-0 m-0\">\r\n              <FontAwesomeIcon icon={faUser} color=\"#4D4D4D\" />\r\n            </div>\r\n\r\n            <Form className=\"w-75\">\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.name}\r\n                  type=\"text\"\r\n                  placeholder=\"Nombre\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, last_name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.last_name}\r\n                  type=\"text\"\r\n                  placeholder=\"Apellido\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, email: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.email}\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Control\r\n                  disabled={!this.state.editing}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, role: e.target.value },\r\n                    })\r\n                  }\r\n                  as=\"select\"\r\n                  required={true}\r\n                  value={this.state.user.role}\r\n                >\r\n                  <option value=\"admin\">Administrador</option>\r\n                  <option value=\"viewer\">Visor</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-around w-100 m-0 px-3\">\r\n            <Col className=\"col-md-5\">\r\n              {!this.state.editing ? (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => this.setState({ editing: true })}\r\n                  className=\"btn-block\"\r\n                >\r\n                  Editar\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={this.updateUser}\r\n                  className=\" btn-block\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )}\r\n            </Col>\r\n\r\n            <Col className=\"col-md-5\">\r\n              <Button\r\n                onClick={this.deleteUser}\r\n                variant=\"danger\"\r\n                className=\"btn-block\"\r\n              >\r\n                Borrar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { createUser } from '../Utils/Api';\r\n\r\nexport default class CreateUserForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: { role: 'admin' },\r\n    };\r\n  }\r\n\r\n  createUser = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.user.password !== this.state.user.password_v) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Las contraseñas no coinciden'\r\n      );\r\n      return;\r\n    }\r\n\r\n    let user = this.state.user;\r\n\r\n    this.props.setLoading(true);\r\n\r\n    try {\r\n      await createUser(user);\r\n      this.props.refreshUsers();\r\n\r\n      this.props.showNotification(\r\n        'success',\r\n        'Ok',\r\n        'El usuario se creo en el sistema'\r\n      );\r\n    } catch (error) {\r\n      this.props.showNotification(\r\n        'error',\r\n        'Error',\r\n        'Algo salió mal al crear el usuario'\r\n      );\r\n    }\r\n\r\n    this.props.setLoading(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h3>Crear un usuario</h3>\r\n        <Form onSubmit={this.createUser}>\r\n          <Row>\r\n            <Col className=\"col-sm-4\">\r\n              <Form.Group>\r\n                <Form.Label>Nombre</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.name}\r\n                  type=\"text\"\r\n                  placeholder=\"Nombre\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col className=\"col-sm-4\">\r\n              <Form.Group>\r\n                <Form.Label>Apellido</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, last_name: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.last_name}\r\n                  type=\"text\"\r\n                  placeholder=\"Apellido\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col className=\"col-sm-4\">\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, email: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.email}\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col className=\"col-sm-4\">\r\n              <Form.Group>\r\n                <Form.Label>Contraseña</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, password: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.password}\r\n                  type=\"password\"\r\n                  placeholder=\"Contraseña\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col className=\"col-sm-4\">\r\n              <Form.Group>\r\n                <Form.Label>Repita la contraseña</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, password_v: e.target.value },\r\n                    })\r\n                  }\r\n                  value={this.state.user.password_v}\r\n                  type=\"password\"\r\n                  placeholder=\"Contraseña\"\r\n                  required={true}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col className=\"col-sm-4\">\r\n              <Form.Group>\r\n                <Form.Label>Seleccione un rol</Form.Label>\r\n                <Form.Control\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      user: { ...this.state.user, role: e.target.value },\r\n                    })\r\n                  }\r\n                  as=\"select\"\r\n                  required={true}\r\n                >\r\n                  <option value=\"admin\">Administrador</option>\r\n                  <option value=\"viewer\">Visor</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col className=\"col-sm-4\">\r\n              <Button\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                variant=\"primary\"\r\n                className=\"btn-block\"\r\n              >\r\n                Crear\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Spinner } from 'react-bootstrap';\r\nimport NavBarDark from '../components/NavBarDark';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\n\r\nimport UserCard from '../components/UserCard';\r\nimport CreateUserForm from '../components/CreateUserForm';\r\n\r\nimport * as api from '../Utils/Api';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport default class Users extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.refreshUsers();\r\n  };\r\n\r\n  refreshUsers = async () => {\r\n    this.setLoading(true);\r\n    try {\r\n      let users = await api.getAllUsers();\r\n      this.setState({ users, selected_user: users[0] });\r\n      this.setLoading(false);\r\n    } catch (e) {\r\n      console.log('Error fetching users' + e);\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  setLoading = (loading) => {\r\n    this.setState({ loading: loading });\r\n  };\r\n\r\n  showNotification = (type, title, message) => {\r\n    switch (type) {\r\n      case 'success':\r\n        NotificationManager.success(message, title, 5000);\r\n        break;\r\n      case 'error':\r\n        NotificationManager.error(message, title, 5000);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBarDark></NavBarDark>\r\n        <NotificationContainer />\r\n\r\n        <Row className=\"mt-3 mx-2\">\r\n          <Col className=\"col-sm-4\">\r\n            <UserCard\r\n              users={this.state.users}\r\n              refreshUsers={this.refreshUsers}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n          </Col>\r\n\r\n          <Col className=\"col-md-8 d-flex flex-column justify-content-stretch align-items-stretch\">\r\n            <CreateUserForm\r\n              refreshUsers={this.refreshUsers}\r\n              showNotification={this.showNotification}\r\n              setLoading={this.setLoading}\r\n            />\r\n            {this.state.loading && (\r\n              <div className=\"justify-content-center d-flex py-5\">\r\n                <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport LoginPage from '../pages/LoginPage';\r\nimport HomePage from '../pages/HomePage';\r\nimport ConfigActions from '../pages/ConfigActions';\r\nimport Diseases from '../pages/Diseases';\r\nimport Users from '../pages/Users';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={LoginPage} />\r\n        <AuthenticatedRoute path=\"/home\" component={HomePage} />\r\n        <AuthenticatedRoute path=\"/users\" component={Users} />\r\n        <AuthenticatedRoute path=\"/configactions\" component={ConfigActions} />\r\n        <AuthenticatedRoute path=\"/diseases\" component={Diseases} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem('token') ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nconst container = document.getElementById('root')\r\n\r\nReactDOM.render(<App/>,container)\r\n"],"sourceRoot":""}